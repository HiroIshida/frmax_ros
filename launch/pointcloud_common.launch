<launch>
  <arg name="standalone" default="false"/> <!-- debug nodes by setting then standalone -->
  <arg name="MANAGER" value="detic_detection_manager" unless="$(arg standalone)"/>
  <arg name="MANAGER" value="" if="$(arg standalone)"/>
  <arg name="LOAD_STATEMENT" value="load" unless="$(arg standalone)"/>
  <arg name="LOAD_STATEMENT" value="standalone" if="$(arg standalone)"/>
  <arg name="input_image" default="/kinect_head/rgb/image_rect_color"/>
  <arg name="input_depth" default="/kinect_head/depth_registered/image"/>
  <arg name="input_camera_info" default="/kinect_head/depth_registered/camera_info"/>
  <arg name="namespace" default="remote" />

  <arg name="_input_image" default="/$(arg namespace)/decompressed_image"/>
  <arg name="_input_depth" default="/$(arg namespace)/decompressed_depth"/>

  <group ns='$(arg namespace)'>

    <node name="$(arg MANAGER)" pkg="nodelet" type="nodelet" args="manager"/>

    <include file="$(find frmax_ros)/launch/decompress_depth.launch">
      <arg name="input_image" value="$(arg input_image)"/>
      <arg name="input_depth" value="$(arg input_depth)"/>
      <rosparam>
        queue_size: 100
      </rosparam>
    </include>

    <node pkg="nodelet" type="nodelet" name="decompress_points"
          args="$(arg LOAD_STATEMENT) depth_image_proc/point_cloud_xyzrgb $(arg MANAGER)">
      <remap from="rgb/camera_info" to="$(arg input_camera_info)"/>
      <remap from="rgb/image_rect_color" to="$(arg _input_image)"/>
      <remap from="depth_registered/image_rect" to="$(arg _input_depth)"/>
      <rosparam>
        queue_size: 100
      </rosparam>
    </node>

    <node name="tf_transform"
          pkg="nodelet" type="nodelet"
          args="$(arg LOAD_STATEMENT) jsk_pcl_utils/TfTransformCloud $(arg MANAGER)">
      <remap from="~input" to="depth_registered/points"/>
      <rosparam>
        target_frame_id: base_footprint
      </rosparam>
    </node>

  </group>
</launch>
